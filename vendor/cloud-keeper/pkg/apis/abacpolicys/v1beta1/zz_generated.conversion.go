// +build !ignore_autogenerated

/*
Copyright 2016 The cloud-keeper Authors.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1beta1

import (
	abac "apistack/pkg/apis/abac"
	abac_v1beta1 "apistack/pkg/apis/abac/v1beta1"
	abacpolicys "cloud-keeper/pkg/apis/abacpolicys"
	conversion "gofreezer/pkg/conversion"
	runtime "gofreezer/pkg/runtime"
)

func init() {
	SchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1beta1_Policy_To_abacpolicys_Policy,
		Convert_abacpolicys_Policy_To_v1beta1_Policy,
		Convert_v1beta1_PolicyList_To_abacpolicys_PolicyList,
		Convert_abacpolicys_PolicyList_To_v1beta1_PolicyList,
	)
}

func autoConvert_v1beta1_Policy_To_abacpolicys_Policy(in *Policy, out *abacpolicys.Policy, s conversion.Scope) error {
	// TODO: Inefficient conversion - can we improve it?
	if err := s.Convert(&in.Policy, &out.Policy, 0); err != nil {
		return err
	}
	return nil
}

func Convert_v1beta1_Policy_To_abacpolicys_Policy(in *Policy, out *abacpolicys.Policy, s conversion.Scope) error {
	return autoConvert_v1beta1_Policy_To_abacpolicys_Policy(in, out, s)
}

func autoConvert_abacpolicys_Policy_To_v1beta1_Policy(in *abacpolicys.Policy, out *Policy, s conversion.Scope) error {
	// TODO: Inefficient conversion - can we improve it?
	if err := s.Convert(&in.Policy, &out.Policy, 0); err != nil {
		return err
	}
	return nil
}

func Convert_abacpolicys_Policy_To_v1beta1_Policy(in *abacpolicys.Policy, out *Policy, s conversion.Scope) error {
	return autoConvert_abacpolicys_Policy_To_v1beta1_Policy(in, out, s)
}

func autoConvert_v1beta1_PolicyList_To_abacpolicys_PolicyList(in *PolicyList, out *abacpolicys.PolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]abac.Policy, len(*in))
		for i := range *in {
			// TODO: Inefficient conversion - can we improve it?
			if err := s.Convert(&(*in)[i], &(*out)[i], 0); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

func Convert_v1beta1_PolicyList_To_abacpolicys_PolicyList(in *PolicyList, out *abacpolicys.PolicyList, s conversion.Scope) error {
	return autoConvert_v1beta1_PolicyList_To_abacpolicys_PolicyList(in, out, s)
}

func autoConvert_abacpolicys_PolicyList_To_v1beta1_PolicyList(in *abacpolicys.PolicyList, out *PolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]abac_v1beta1.Policy, len(*in))
		for i := range *in {
			// TODO: Inefficient conversion - can we improve it?
			if err := s.Convert(&(*in)[i], &(*out)[i], 0); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

func Convert_abacpolicys_PolicyList_To_v1beta1_PolicyList(in *abacpolicys.PolicyList, out *PolicyList, s conversion.Scope) error {
	return autoConvert_abacpolicys_PolicyList_To_v1beta1_PolicyList(in, out, s)
}
