- hosts: cloud
  remote_user: root

  vars:
    etcd_server: "{{ lookup('env','PROXY_SERVER_ARGS_ETCD') }}"

  tasks:
    - name: Wait for port 22 to become available
      local_action: "wait_for port=22 host={{ inventory_hostname }}"

    - name: Crate SS directory
      file: path=/home/shadowsocks-node/ state=directory owner=root group=root mode=0755
    
    - name: Crate SS Log directory
      file: path=/var/log/shadowss state=directory owner=root group=root mode=0755

    - name: Copy shadowss
      copy: src=../../ss/shadowss dest=/home/shadowsocks-node/shadowss owner=root group=root mode=0755
    
    - name: Copy startvps.sh
      copy: src=../../ss/startvps.sh dest=/home/shadowsocks-node/startvps.sh  owner=root group=root mode=0755

    - name: Copy ssservice
      copy: src=../../ss/ssservice dest=/etc/init.d/ssservice  owner=root group=root mode=0755

    - name: Copy crontab
      copy: src=../../ss/restartss.sh dest=/home/shadowsocks-node/restartss.sh  owner=root group=root mode=0755

    - name: Copy crontab dropcache
      copy: src=../../ss/dropcache.sh dest=/home/shadowsocks-node/dropcache.sh  owner=root group=root mode=0755

    - name: Copy attr.json
      copy: src=attr.json dest=/attr.json  owner=root group=root mode=0755

    - cron: name="restart ssservice" minute="30" hour="5,18" job="/home/shadowsocks-node/restartss.sh"
    
    - cron: name="dropcache" minute="*/10" job="/home/shadowsocks-node/dropcache.sh"

    - shell: echo "{{etcd_server}}" > /home/shadowsocks-node/etcd_server_url 

- hosts: cloud
  remote_user: root

  tasks:
    - name: chkconfig add ssservice
      command: chkconfig --add ssservice

    - name: chkconfig ssservice on
      command: chkconfig ssservice on
      notify:
        - restart ssservice

    - name: restart ssservice
      service: name=ssservice state=restarted
      tags: restartSS      

  handlers:
    - name: restart ssservice
      service: name=ssservice state=restarted
