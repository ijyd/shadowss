// +build !ignore_autogenerated

/*
Copyright 2016 The cloud-keeper Authors.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1

import (
	testgroup "apistack/examples/apiserver/pkg/apis/testgroup"
	api "gofreezer/pkg/api"
	conversion "gofreezer/pkg/conversion"
	runtime "gofreezer/pkg/runtime"
)

func init() {
	SchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1_TestType_To_testgroup_TestType,
		Convert_testgroup_TestType_To_v1_TestType,
		Convert_v1_TestTypeList_To_testgroup_TestTypeList,
		Convert_testgroup_TestTypeList_To_v1_TestTypeList,
		Convert_v1_TestTypeStatus_To_testgroup_TestTypeStatus,
		Convert_testgroup_TestTypeStatus_To_v1_TestTypeStatus,
	)
}

func autoConvert_v1_TestType_To_testgroup_TestType(in *TestType, out *testgroup.TestType, s conversion.Scope) error {
	if err := api.Convert_unversioned_TypeMeta_To_unversioned_TypeMeta(&in.TypeMeta, &out.TypeMeta, s); err != nil {
		return err
	}
	// TODO: Inefficient conversion - can we improve it?
	if err := s.Convert(&in.ObjectMeta, &out.ObjectMeta, 0); err != nil {
		return err
	}
	if err := Convert_v1_TestTypeStatus_To_testgroup_TestTypeStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_v1_TestType_To_testgroup_TestType(in *TestType, out *testgroup.TestType, s conversion.Scope) error {
	return autoConvert_v1_TestType_To_testgroup_TestType(in, out, s)
}

func autoConvert_testgroup_TestType_To_v1_TestType(in *testgroup.TestType, out *TestType, s conversion.Scope) error {
	if err := api.Convert_unversioned_TypeMeta_To_unversioned_TypeMeta(&in.TypeMeta, &out.TypeMeta, s); err != nil {
		return err
	}
	// TODO: Inefficient conversion - can we improve it?
	if err := s.Convert(&in.ObjectMeta, &out.ObjectMeta, 0); err != nil {
		return err
	}
	if err := Convert_testgroup_TestTypeStatus_To_v1_TestTypeStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func Convert_testgroup_TestType_To_v1_TestType(in *testgroup.TestType, out *TestType, s conversion.Scope) error {
	return autoConvert_testgroup_TestType_To_v1_TestType(in, out, s)
}

func autoConvert_v1_TestTypeList_To_testgroup_TestTypeList(in *TestTypeList, out *testgroup.TestTypeList, s conversion.Scope) error {
	if err := api.Convert_unversioned_TypeMeta_To_unversioned_TypeMeta(&in.TypeMeta, &out.TypeMeta, s); err != nil {
		return err
	}
	if err := api.Convert_unversioned_ListMeta_To_unversioned_ListMeta(&in.ListMeta, &out.ListMeta, s); err != nil {
		return err
	}
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]testgroup.TestType, len(*in))
		for i := range *in {
			if err := Convert_v1_TestType_To_testgroup_TestType(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

func Convert_v1_TestTypeList_To_testgroup_TestTypeList(in *TestTypeList, out *testgroup.TestTypeList, s conversion.Scope) error {
	return autoConvert_v1_TestTypeList_To_testgroup_TestTypeList(in, out, s)
}

func autoConvert_testgroup_TestTypeList_To_v1_TestTypeList(in *testgroup.TestTypeList, out *TestTypeList, s conversion.Scope) error {
	if err := api.Convert_unversioned_TypeMeta_To_unversioned_TypeMeta(&in.TypeMeta, &out.TypeMeta, s); err != nil {
		return err
	}
	if err := api.Convert_unversioned_ListMeta_To_unversioned_ListMeta(&in.ListMeta, &out.ListMeta, s); err != nil {
		return err
	}
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TestType, len(*in))
		for i := range *in {
			if err := Convert_testgroup_TestType_To_v1_TestType(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

func Convert_testgroup_TestTypeList_To_v1_TestTypeList(in *testgroup.TestTypeList, out *TestTypeList, s conversion.Scope) error {
	return autoConvert_testgroup_TestTypeList_To_v1_TestTypeList(in, out, s)
}

func autoConvert_v1_TestTypeStatus_To_testgroup_TestTypeStatus(in *TestTypeStatus, out *testgroup.TestTypeStatus, s conversion.Scope) error {
	out.Blah = in.Blah
	return nil
}

func Convert_v1_TestTypeStatus_To_testgroup_TestTypeStatus(in *TestTypeStatus, out *testgroup.TestTypeStatus, s conversion.Scope) error {
	return autoConvert_v1_TestTypeStatus_To_testgroup_TestTypeStatus(in, out, s)
}

func autoConvert_testgroup_TestTypeStatus_To_v1_TestTypeStatus(in *testgroup.TestTypeStatus, out *TestTypeStatus, s conversion.Scope) error {
	out.Blah = in.Blah
	return nil
}

func Convert_testgroup_TestTypeStatus_To_v1_TestTypeStatus(in *testgroup.TestTypeStatus, out *TestTypeStatus, s conversion.Scope) error {
	return autoConvert_testgroup_TestTypeStatus_To_v1_TestTypeStatus(in, out, s)
}
